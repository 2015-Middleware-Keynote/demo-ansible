# vim: set ft=ansible:
---
- name: Configure the security groups
  hosts: localhost
  gather_facts: no
  connection: local
  sudo: no
  vars:
    vpc_id: "{{ ec2.vpc_id
                | default(provider_defaults.ec2.vpc_id, true)
                | default(omit) }}"
  tasks:
  - fail:
      msg: required values not set
    when: cluster_id is not defined or ec2_region is not defined

  - name: Create ec2 node security group
    ec2_group:
      region: "{{ ec2_region }}"
      vpc_id: "{{ vpc_id }}"
      name: "{{ cluster_id }}-node"
      description: "{{ cluster_id }} nodes"
      rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 10250
        to_port: 10250
        group_name: "{{ cluster_id }}-master"
        group_desc: "{{ cluster_id }} masters"
      - proto: udp
        from_port: 4789
        to_port: 4789
        group_name: "{{ cluster_id }}-node"
      rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  - name: Create ec2 master security group
    ec2_group:
      region: "{{ ec2_region }}"
      vpc_id: "{{ vpc_id }}"
      name: "{{ cluster_id }}-master"
      description: "{{ cluster_id }} masters"
      rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 53
        to_port: 53
        group_name: "{{ cluster_id }}-node"
      - proto: udp
        from_port: 53
        to_port: 53
        group_name: "{{ cluster_id }}-node"
      - proto: tcp
        from_port: 8443
        to_port: 8443
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 4001
        to_port: 4001
        group_name: "{{ cluster_id }}-node"
      rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
