# vim: set ft=ansible:
---
- hosts: localhost
  connection: local
  sudo: no
  gather_facts: no
  vars_prompt:
  - name: c_id
    prompt: What cluster_id?
    default: summit
    private: no
  - name: c_region
    prompt: What ec2 region?
    default: us-east-1
    private: no
  - name: c_image
    prompt: What ec2 image?
    default: ami-12663b7a
    private: no
  - name: c_instance
    prompt: What ec2 instance type?
    default: m3.large
    private: no
  - name: c_keypair
    prompt: What ec2 keypair?
    default: default
    private: no
  - name: c_host_zone
    prompt: What route53 zone to use for hosts?
    default: aws.paas.ninja
    private: no
  - name: c_wildcard_prefix
    prompt: What zone prefix to use for apps?
    default: apps
    private: no
  - name: c_cluster_size
    prompt: Cluster size (xsmall, small, medium, large, xlarge)?
    default: xsmall
    private: no
  vars:
    cluster_sizes:
      xsmall: 1
      small: 3
      medium: 5
      large: 10
      xlarge: 20
  tasks:
  - fail:
      msg: Cluster size must be be in {{ cluster_sizes.keys() }}
    when: c_cluster_size not in cluster_sizes.keys()

  - set_fact: cluster_id={{ c_id }}
  - set_fact: ec2_region={{ c_region }}
  - set_fact: ec2_image={{ c_image }}
  - set_fact: ec2_keypair={{ c_keypair }}
  - set_fact: ec2_instance_type={{ c_instance }}
  - set_fact: r53_host_zone={{ c_host_zone }}
  - set_fact: r53_wildcard_prefix={{ c_wildcard_zone }}
  - set_fact: r53_wildcard_zone={{ c_wildcard_zone }}.{{ c_host_zone }}
  - set_fact: num_app_nodes={{ c_num_app_nodes }}
  - set_fact: hexboard_size={{ c_cluster_size }}

# create VPC configuration
- include: util_playbooks/create_vpc.yml

# Create the AWS security groups if not already present
- include: util_playbooks/create_security_groups.yml
  vars:
    vpc_id: "{{ vpc.vpc_id }}"

# Create the master instance
- include: util_playbooks/create_masters.yml
  vars:
    vpc_subnet_id: "{{ vpc.subnets.0.id }}"

# Create the node instance(s)
- include: util_playbooks/create_nodes.yml
  vars:
    vpc_subnet_id: "{{ vpc.subnets.0.id }}"

# Register any un-registered hosts to rhsm
- include: util_playbooks/register_host.yml

# Add the created hosts to groups for configuration
- hosts: localhost
  connection: local
  sudo: no
  gather_facts: no
  vars_files:
  - vars.yml
  vars:
    master_hosts: "{{ groups['tag_openshift-master_' ~ cluster_id] }}"
    node_hosts: "{{ groups['tag_openshift-node_' ~ cluster_id] }}"
  tasks:
  - add_host:
      name: "{{ item }}"
      ansible_ssh_user: openshift
      ansible_sudo: yes
      groups: oo_masters_to_config, oo_first_master
      r53_host_zone: "{{ hostvars.localhost.r53_host_zone }}"
      openshift_public_hostname: "{{ hostvars[item]['ec2_tag_Name'] }}"
      cluster_id: "{{ hostvars.localhost.cluster_id }}"
      openshift_cluster_id: "{{ hostvars.localhost.cluster_id }}"
      openshift_debug_level: "{{ debug_level }}"
      openshift_deployment_type: "{{ deployment_type }}"
      openshift_master_access_token_max_seconds: 2419200
      openshift_master_identity_providers: "{{ identity_providers }}"
      osm_cluster_network_cidr: 10.0.0.0/8
      osm_host_subnet_length: 16
    with_items: master_hosts
  - add_host:
      name: "{{ item }}"
      ansible_ssh_user: openshift
      ansible_sudo: yes
      groups: oo_nodes_to_config
      cluster_id: "{{ hostvars.localhost.cluster_id }}"
      openshift_cluster_id: "{{ hostvars.localhost.cluster_id }}"
      openshift_debug_level: "{{ debug_level }}"
      openshift_deployment_type: "{{ deployment_type }}"
      openshift_public_hostname: "{{ hostvars[item]['ec2_tag_Name'] }}"
      r53_host_zone: "{{ hostvars.localhost.r53_host_zone }}"
      openshift_node_labels:
        region: "{{ hostvars[item]['ec2_tag_node-region'] }}"
        zone: default
    with_items: node_hosts

# Configure the instances
- include: ../../openshift-ansible/playbooks/common/openshift-cluster/config.yml
  vars:
    g_etcd_group: oo_etcd_to_config
    g_masters_group: oo_masters_to_config
    g_nodes_group: oo_nodes_to_config

- include: util_playbooks/post_setup.yml
  vars:
    cluster_id: "{{ hostvars.localhost.cluster_id }}"
    r53_wildcard_zone: "{{ hostvars.localhost.r53_wildcard_zone }}"
    hexboard_size: "{{ hostvars.localhost.hexboard_size }}"
